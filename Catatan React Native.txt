KEPERLUAN UNTUK CODING
================================================================================
Install :
1. Github Desktop
2. Windows Terminal
				
Extensions :
1. Atom One Dark Theme
2. Material Icon Theme
3. Prettier
   Setting :
   File > Preferences > Setting > search (format on save) & Checklist
4. Color Highlight
5. Babel JavaScript
6. ES7 React/Redux/GraphQL/React-Native snippets
7. Excel Viewer
8. npm Intellisense
9. Path Intellisense
10. React Native Tools
11. React-Native/React/Redux snippets for es6/es7
12. Simple React Snippets
13. Image preview

================================================================================
CARA DOWNLOAD & MENJALANKAN PROJECT REACT NATIVE :
1. Terminal Alt.1 : npx @react-native-community/cli init antarLaundry (recomended)
   Terminal Alt.2 : npx react-native init antarLaundry (deprecated)
   Terminal Alt.3 : react-native init wayaheFutsal (deprecated)
2. Terminal : npm install
3. Terminal : npx react-native start
4. Terminal : npx react-native run-android

================================================================================
CARA MENGHAPUS PROJECT JIKA TERJADI ERROR :
1. Run as Administrator (cmd)
2. rmdir /s /q "D:\ReactNative\AntarLaundry"

================================================================================
CARA MENGHAPUS INSTALASI REACT NATIVE :
Terminal : npm uninstall -g react-native-cli

================================================================================
MENJALANKAN REACT NATIVE TANPA USB CABLE :
1. Sambungkan perangkat ke komputer menggunakan kabel USB
2. Pastikan debugging USB diaktifkan di perangkat Anda
3. Jalankan perintah berikut di terminal
   adb tcpip 5555
4. Lepaskan kabel USB
5. Sambungkan perangkat ke jaringan Wi-Fi yang sama dengan komputer
6. Temukan alamat IP perangkat Anda (bisa dilihat di pengaturan Wi-Fi perangkat)
7. Jalankan perintah berikut untuk menghubungkan perangkat
   adb connect <device-ip>:5555
8. Sekarang Anda dapat menjalankan aplikasi React Native menggunakan perintah
   npx react-native run-android

================================================================================
INSTALL REACT NATIVE NAVIGATION :
Untuk berpindah dari screen 1 ke screen yang lainnya.
1. Link : https://reactnavigation.org/docs/getting-started#installation
   Terminal : npm install @react-navigation/native (2 

2. Terminal : npm install react-native-screens react-native-safe-area-context (1 mb)

3. Terminal : npm install @react-navigation/native-stack (1 mb)

4. Link : https://reactnavigation.org/docs/bottom-tab-navigator/ (versi 5.x di video)
   Terminal : npm install @react-navigation/bottom-tabs (1 mb)

5. Link : https://github.com/software-mansion/react-native-svg
   Terminal : npm install react-native-svg (6 mb)

6. Link : https://github.com/kristerkari/react-native-svg-transformer
   Terminal : npm install --save-dev react-native-svg-transformer (7 mb)

7. metro.config.js:
   Replace Code :
   const { getDefaultConfig } = require("expo/metro-config");

   module.exports = (() => {
     const config = getDefaultConfig(__dirname);

     const { transformer, resolver } = config;

     config.transformer = {
       ...transformer,
       babelTransformerPath: require.resolve("react-native-svg-transformer/expo")
     };
     config.resolver = {
       ...resolver,
       assetExts: resolver.assetExts.filter((ext) => ext !== "svg"),
       sourceExts: [...resolver.sourceExts, "svg"]
     };

     return config;
   })();

================================================================================
STRUKTUR FOLDER REACT NATIVE :
> src
  > components
  > router
  > assets
  > pages

================================================================================
KONVERSI EKSTENSI .TSX ke .JSX :
1. Ganti Ekstensi File
   - Ubah semua file dengan ekstensi .tsx menjadi .jsx
   - Jika ada file TypeScript biasa (.ts), ubah menjadi .js.
2. Hapus atau Sesuaikan Tipe TypeScript
   - Dalam setiap file, hapus semua tipe TypeScript (seperti :string, :number, dll.).
   - Hapus semua import terkait TypeScript, seperti import { FC } from 'react' jika tidak digunakan.
3. Perbarui Konfigurasi Babel
   - Buka file babel.config.js.
     module.exports = {
       presets: ['module:metro-react-native-babel-preset'],
     };
4. Hapus TypeScript Dependencies
   - npm uninstall typescript @types/react @types/react-native
5. Perbarui File Konfigurasi
   - rm tsconfig.json
6. Test project :
   - npx react-native run-android
   - npx react-native run-ios

================================================================================
FONTS :
Ketika akan mengganti jenis font,
1. Download font
2. Buat folder dan simpan di dalam path project berikut :
   Path : D:\ReactNative\antarLaundry\android\app\src\main\assets\fonts

SHAWODW :
Untuk view shadow
https://ethercreative.github.io/react-native-shadow-generator/

================================================================================
1. https://chocolatey.org/install
2. Terminal (Powershell)  : Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
3. Terminal (cmd) : choco install -y nodejs-lts microsoft-openjdk17

270mb (file baru di download)


tsconfig.json
{
  "extends": "@tsconfig/react-native/tsconfig.json"
}

================================================================================
VOLTA MANAGER :
1. volta install node@18
2. volta pin node@18

================================================================================
REACT NATIVE VECTOR ICONS :

Link : https://github.com/oblador/react-native-vector-icons
Installation :
  1. Terminal : npm install --save @react-native-vector-icons/common
  2. Stop server dan emulator
  3. Buka file android > app > src > build.gradle
  4. Sisipkan di baris paling bawah :
     apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
  5. Jalankan server dan emulator
  6. Setiap kali akan menggunakan icon, import di halaman tersebut baris code berikut :
     import Icon from 'react-native-vector-icons/FontAwesome5';

================================================================================
REACT NATIVE LOADING :

LOADING LOGIN :
https://www.youtube.com/watch?v=wXiFNHf-pXg

================================================================================
REACT NATIVE MODAL BOX :

Link Library : https://github.com/react-native-modal/react-native-modal
  1. Terminal : npm i react-native-modal
     atau,
     Terminal : yarn add react-native-modal

  2. Terminal : npx react-native start
     Terminal : npx react-native run-android

  3. Import :
     import Modal from "react-native-modal";

  4. Copy ke dalam return :
     <Modal isVisible={true}>
       <View style={{ flex: 1 }}>
         <Text>I am the modal content!</Text>
       </View>
     </Modal>'

  5. Contoh Modifikasi Modal :
      return (
        <View style={{flex: 1}}>
          <Modal
            isVisible={this.state.isVisible}
            style={{justifyContent: 'center', alignItems: 'center'}}>
            <View style={{width: 100, height: 100, backgroundColor: '#FFFFFF'}}>
              <Text>I am the modal content!</Text>

              <TouchableOpacity onPress={() => this.setState({isVisible: false})}>
                <Text>Close Modal</Text>
              </TouchableOpacity>
            </View>
          </Modal>

          <TouchableOpacity onPress={() => this.setState({isVisible: true})}>
            <Text>Open Modal</Text>
          </TouchableOpacity>
        </View>
      );

  6. Contoh Modifikasi Modal (Ketika Klik di Luar Modal Akan Ter-tutup)
     Menggunakan fungsi onBackdropPress.

      return (
          <View style={{flex: 1}}>
            <Modal
              isVisible={this.state.isVisible}
              style={{justifyContent: 'center', alignItems: 'center'}}
              onBackdropPress={() => this.setState({isVisible: false})}>
              <View style={{width: 100, height: 100, backgroundColor: '#FFFFFF'}}>
                <Text>I am the modal content!</Text>

                <TouchableOpacity onPress={() => this.setState({isVisible: false})}>
                  <Text>Close Modal</Text>
                </TouchableOpacity>
              </View>
            </Modal>

            <TouchableOpacity onPress={() => this.setState({isVisible: true})}>
              <Text>Open Modal</Text>
            </TouchableOpacity>
          </View>
        );

  7. Cara Merubah/Memisahkan Modal Menjadi Function Terpisah (Code Lengkap) :
      import React, {Component} from 'react';
      import {Text, TouchableOpacity, View} from 'react-native';

      import Modal from 'react-native-modal';

      class App extends Component {
        constructor(props) {
          super(props);
          this.state = {
            isVisible: false,
          };
        }

        renderModal = () => {
          return (
            <Modal
              isVisible={this.state.isVisible}
              style={{justifyContent: 'center', alignItems: 'center'}}
              onBackdropPress={() => this.setState({isVisible: false})}>
              <View style={{width: 100, height: 100, backgroundColor: '#FFFFFF'}}>
                <Text>I am the modal content!</Text>

                <TouchableOpacity onPress={() => this.setState({isVisible: false})}>
                  <Text>Close Modal</Text>
                </TouchableOpacity>
              </View>
            </Modal>
          );
        };

        render() {
          return (
            <View style={{flex: 1}}>
              {this.renderModal()}
              <TouchableOpacity onPress={() => this.setState({isVisible: true})}>
                <Text>Open Modal</Text>
              </TouchableOpacity>
            </View>
          );
        }
      }

      export default App;

  8. Link Fungsi Pada Modal :
     https://github.com/react-native-modal/react-native-modal?tab=readme-ov-file#available-props























